Value,Mnemonic,Price,Description,
0x00,STOP,0,Halts execution.,
0x01,ADD,3,Addition operation.,
0x02,MUL,5,Multiplication operation.,
0x03,SUB,3,Subtraction operation.,
0x04,DIV,5,Integer division operation.,
0x05,SDIV,5,Signed integer division operation (truncated).,
0x06,MOD,5,Modulo remainder operation.,
0x07,SMOD,5,Signed modulo remainder operation.,
0x08,ADDMOD,8,Modulo addition operation.,
0x09,MULMOD,8,Modulo multiplication operation.,
0x0a,EXP,(exp == 0) ? 10 : (10 + 10 * (1 + log256(exp))),Exponential operation.,
0x0b,SIGNEXTEND,5,Extend length of two’s complement signed integer.,
0x10,LT,3,Less-than comparison.,
0x11,GT,3,Greater-than comparison.,
0x12,SLT,3,Signed less-than comparison.,
0x13,SGT,3,Signed greater-than comparison.,
0x14,EQ,3,Equality comparison.,
0x15,ISZERO,3,Simple not operator.,
0x16,AND,3,Bitwise AND operation.,
0x17,OR,3,Bitwise OR operation.,
0x18,XOR,3,Bitwise XOR operation.,
0x19,NOT,3,Bitwise NOT operation.,
0x1a,BYTE,3,Retrieve single byte from word.,
0x20,SHA3,30 + 6 * (size of input in words),Compute Keccak-256 hash.,
0x30,ADDRESS,2,Get address of currently executing account.,
0x31,BALANCE,400,Get balance of the given account,
0x32,ORIGIN,2,Get execution origination address.,
0x33,CALLER,2,Get caller address.,
0x34,CALLVALUE,2,Get deposited value by the instruction/transaction responsible for this execution.,
0x35,CALLDATALOAD,3,Get input data of current environment.,
0x36,CALLDATASIZE,2,Get size of input data in current environment.,
0x37,CALLDATACOPY,2 + 3 * (words copied),Copy input data in current environment to memory.,
0x38,CODESIZE,2,Get size of code running in current environment.,
0x39,CODECOPY,2 + 3 * (words copied),Copy code running in current environment to memory.,
0x3a,GASPRICE,2,Get price of gas in current environment.,
0x3b,EXTCODESIZE,700,Get size of an account’s code.,
0x3c,EXTCODECOPY,700 + 3 * (words copied),Copy an account’s code to memory.,
0x3d,RETURNDATASIZE,2,Get size of output data from the previous call from the current environment.,
0x3e,RETURNDATACOPY,3,Copy output data from the previous call to memory,
0x40,BLOCKHASH,20,Get the hash of one of the 256 most recent complete blocks.,
0x41,COINBASE,2,Get the block’s beneficiary address.,
0x42,TIMESTAMP,2,Get the block’s timestamp.,
0x43,NUMBER,2,Get the block’s number.,
0x44,DIFFICULTY,2,Get the block’s difficulty.,
0x45,GASLIMIT,2,Get the block’s gas limit.,
0x50,POP,2,Remove item from stack.,
0x51,MLOAD,3,Load word from memory.,
0x52,MSTORE,3,Save word to memory.,
0x53,MSTORE8,3,Save byte to memory.,
0x54,SLOAD,200,Load word from storage.,
0x55,SSTORE,((value != 0) && (storage_location == 0)) ? 20000 : 5000,Save word to storage.,
0x56,JUMP,8,Alter the program counter.,
0x57,JUMPI,10,Conditionally alter the program counter.,
0x58,PC,2,Get the value of the program counter prior to the increment corresponding to this instruction.,
0x59,MSIZE,2,Get the size of active memory in bytes.,
0x5a,GAS,2,Get the amount of available gas including the corresponding reduction for the cost of this instruction.,
0x5b,JUMPDEST,1,Mark a valid destination for jumps.,
0x60,PUSH1,3,Place 1 byte item on stack.,
0x61,PUSH2,3,Place 2 byte item on stack.,
⋮,⋮,⋮,⋮,
0x7f,PUSH32,3,Place 32 byte item on stack.,
0x80,DUP1,3,Duplicate 1st stack item.,
0x81,DUP2,3,Duplicate 2nd stack item.,
⋮,⋮,⋮,⋮,
0x8f,DUP16,3,Duplicate 16th stack item.,
0x90,SWAP1,3,Exchange 1st and 2nd stack items.,
0x91,SWAP2,3,Exchange 1st and 3rd stack items.,
⋮,⋮,⋮,⋮,
0x9f,SWAP16,3,Exchange 1st and 17th stack items.,
0xa0,LOG0,1 * 375 + 8 * (bytes of log data),Append log record with no topics.,
0xa1,LOG1,2 * 375 + 8 * (bytes of log data),Append log record with one topic.,
⋮,⋮,⋮,⋮,
0xa4,LOG4,5 * 375 + 8 * (bytes of log data),Append log record with four topics.,
0xf0,CREATE,32000,Create a new account with associated code.,
0xf1,CALL,Complex,Message-call into an account.,
0xf2,CALLCODE,Complex,Message-call into this account with an alternative account’s code.,
0xf3,RETURN,0,Halt execution returning output data.,
0xf4,DELEGATECALL,Complex,Message-call into this account with an alternative account’s code, but persisting the current values for sender and value.,
0xfa,STATICCALL,Complex,Static message-call into an account.,
0xfd,REVERT,Complex,Halt execution reverting state changes but returning data and remaining gas.,
0xfe,INVALID,--,Designated invalid instruction.,
0xff,SELFDESTRUCT,5000 + ((create_new_account) ? 25000 : 0),Halt execution and register account for later deletion.,
--,GTX,21000,Base transaction gas cost.,
--,GTXDATAZERO,4,Cost per zero byte of calldata.,
--,GTXDATANONZERO,68,Cost per non-zero byte of calldata.,
--,SHA256BASE,60,Base cost of SHA256.,
--,SHA3WORD,6,Cost of SHA3 per word.,
--,SHA256WORD,12,Cost of SHA256 per word.,
--,RIPEMD160BASE,600,Base cost of RIPEMD160.,
--,RIPEMD160WORD,120,Cost of RIPEMD160 per word.,
--,IDENTITYBASE,15,Base cost of identity.,
--,IDENTITYWORD,3,Cost of identity per word.,
--,ECRECOVER,3000,Cost of ecrecover op.,
